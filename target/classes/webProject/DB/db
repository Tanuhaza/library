-- MySQL Script generated by MySQL Workbench
-- Tue Apr 10 14:53:33 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema library
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema library
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `library` DEFAULT CHARACTER SET utf8 ;
USE `library` ;

-- -----------------------------------------------------
-- Table `library`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `role` ENUM('USER', 'ADMIN') NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `library`.`genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library`.`genre` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `library`.`book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library`.`book` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(100) NOT NULL,
  `description` TEXT NOT NULL,
  `picture` VARCHAR(45) NOT NULL,
  `rate` VARCHAR(45) NULL,
  `available` TINYINT NOT NULL,
  `quantity` INT NOT NULL,
  `year` INT NOT NULL,
  `genre_id` INT NOT NULL,
  `keywords` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`, `genre_id`),
  INDEX `fk_book_genre1_idx` (`genre_id` ASC),
  CONSTRAINT `fk_book_genre1`
    FOREIGN KEY (`genre_id`)
    REFERENCES `library`.`genre` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = big5;


-- -----------------------------------------------------
-- Table `library`.`author`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library`.`author` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `library`.`book_out_on_loan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library`.`book_out_on_loan` (
  `startData` DATE NOT NULL,
  `returnDate` DATE NOT NULL,
  `user_id` INT NOT NULL,
  `book_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `book_id`),
  INDEX `fk_book_out_on_loan_book1_idx` (`book_id` ASC),
  CONSTRAINT `fk_book_out_on_loan_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `library`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_book_out_on_loan_book1`
    FOREIGN KEY (`book_id`)
    REFERENCES `library`.`book` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `library`.`book_author`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library`.`book_author` (
  `book_id` INT NOT NULL,
  `author_id` INT NOT NULL,
  PRIMARY KEY (`book_id`, `author_id`),
  INDEX `fk_book_has_author_author1_idx` (`author_id` ASC),
  INDEX `fk_book_has_author_book_idx` (`book_id` ASC),
  CONSTRAINT `fk_book_has_author_book`
    FOREIGN KEY (`book_id`)
    REFERENCES `library`.`book` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_book_has_author_author1`
    FOREIGN KEY (`author_id`)
    REFERENCES `library`.`author` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


INSERT INTO `library`.`user` (`firstName`, `lastName`, `email`, `phone`, `password`, `role`) VALUES ('Tetiana', 'Zabolotko', 'wariushas@gmail.com', '0973944676', 'root', 'ADMIN');
INSERT INTO `library`.`user` (`firstName`, `lastName`, `email`, `phone`, `password`, `role`) VALUES ('John', 'Tailor', 'john@gmail.com', '0503457897', 'root', 'USER');
INSERT INTO `library`.`user` (`id`, `firstName`, `lastName`, `email`, `phone`, `password`, `role`) VALUES ('3', 'Mark', 'Shell', 'shell@gmail.com', '0973864578', 'root', 'USER');

INSERT INTO `library`.`book_out_on_loan` (`startData`, `returnDate`, `user_id`, `book_id`) VALUES ('1.04.2018', '1.05.2018', '3', '2');


INSERT INTO `library`.`genre` (`name`) VALUES ('biography');
INSERT INTO `library`.`genre` (`name`) VALUES ('psycology');
INSERT INTO `library`.`genre` (`name`) VALUES ('romance');
INSERT INTO `library`.`genre` (`name`) VALUES ('business');
INSERT INTO `library`.`genre` (`name`) VALUES ('humor and comedy');

INSERT INTO `library`.`author` (`firstName`, `lastName`) VALUES (' Anthony', ' Ray Hinton');
INSERT INTO `library`.`author` (`firstName`, `lastName`) VALUES ('Bryan', 'Stevenson');
INSERT INTO `library`.`author` (`firstName`, `lastName`) VALUES ('Nell ', 'Scovell');
INSERT INTO `library`.`author` (`firstName`, `lastName`) VALUES (' Brené', ' Brown');
INSERT INTO `library`.`author` (`firstName`, `lastName`) VALUES (' Joseph', ' Deitch');
INSERT INTO `library`.`author` (`firstName`, `lastName`) VALUES (' Shelly', ' Laurenston');


INSERT INTO `library`.`book` (`title`, `description`, `picture`, `rate`, `available`, `quantity`, `year`, `genre_id`) VALUES ('The Sun Does Shine: How I Found Life and Freedom on Death Row', 'In 1985, Anthony Ray Hinton was arrested and charged with two counts of capital murder in Alabama. Stunned, confused, and only twenty-nine years old, Hinton knew that it was a case of mistaken identity and believed that the truth would prove his innocence and ultimately set him free.', 'c:\\', '4', '1', '3', '2015', '1');
INSERT INTO `library`.`book` (`title`, `description`, `picture`, `rate`, `available`, `quantity`, `year`, `genre_id`) VALUES ('Just the Funny Parts: ... And a Few Hard Truths About Sneaking Into the Hollywood Boys Club', 'Just the Funny Parts is a juicy and scathingly funny insider look at how pop culture gets made. For more than thirty years, writer, producer and director Nell Scovell worked behind the scenes of iconic TV shows, including The Simpsons, Late Night with David Letterman, Murphy Brown, NCIS, The Muppets, and Sabrina, the Teenage Witch, which she created and executive produced.  ', 'c:\\', '4', '1', '4', '2018', '1');
-- INSERT INTO `library`.`book` (`title`, `description`, `picture`, `rate`, `available`, `quantity`, `year`, `genre_id`) VALUES ('Braving the Wilderness: The Quest for True Belonging and the Courage to Stand Alone', '\"True belonging doesn\'t require us to change who we are. It requires us to be who we are.\" Social scientist Brene Brown, PhD, LMSW, has sparked a global conversation about the experiences that bring meaning to our lives--experiences of courage, vulnerability, love, belonging, shame, and empathy. In Braving the Wilderness, Brown redefines what it means to truly belong in an age of increased polarization. With her trademark mix of research, storytelling, and honesty, Brown will again change the cultural conversation while mapping a clear path to true belonging.', 'c:\\', '5', '1', '2', '2017', '2');
-- INSERT INTO `library`.`book` (`title`, `description`, `picture`, `rate`, `available`, `quantity`, `year`, `genre_id`) VALUES ('Elevate: An Essential Guide to Life', 'A modern world that is bursting with data can often make us feel even more lost as we struggle to find meaning and look for the answers to life’s mysteries. Joseph Deitch shares his lifelong pursuit of wisdom and growth in an accessible, practical, down-to-earth gift to his readers. Elevate is a celebration of life and the potential that exists for all of us. It provides both answers and insights as it links awareness and action, East and West, ancient and modern, spiritual and scientific. It offers a formula for turning frustration into fascination and provides a universal framework for what works and why, what to do . . . and why we don’t.', 'c:\\', '4', '1', '3', '2018', '2');
INSERT INTO `library`.`book` (`title`, `description`, `picture`, `rate`, `available`, `quantity`, `year`, `genre_id`) VALUES ('Hot and Badgered', 'It’s not every day that a beautiful naked woman falls out of the sky and lands face-first on grizzly shifter Berg Dunn’s hotel balcony. Definitely they don’t usually hop up and demand his best gun. Berg gives the lady a grizzly-sized t-shirt and his cell phone, too, just on style points. And then she’s gone, taking his XXXL heart with her. By the time he figures out she’s a honey badger shifter, it’s too late.', 'c:\\', '4', '1', '2', '2018', '5');
-- INSERT INTO `library`.`book` (`title`, `description`, `picture`, `available`, `quantity`, `year`, `genre_id`, `keywords`, `added_date`, `rate`) VALUES ('Death on the Nile', 'The tranquillity of a cruise along the Nile is shattered by the discovery that Linnet Ridgeway has been shot through the head. She was young, stylish and beautiful, a girl who had everything - until she lost her life. Hercule Poirot recalls an earlier outburst by a fellow passenger: \'I\'d like to put my dear little pistol against her head and just press the trigger.\' Yet in this exotic setting, nothing is ever quite what it seems', 'c:\\', '1', '3', '1978', '6', 'death', '2018-11-4', '5');



INSERT INTO `library`.`book_author` (`book_id`, `author_id`) VALUES ('1', '1');
INSERT INTO `library`.`book_author` (`book_id`, `author_id`) VALUES ('1', '2');
INSERT INTO `library`.`book_author` (`book_id`, `author_id`) VALUES ('2', '3');
INSERT INTO `library`.`book_author` (`book_id`, `author_id`) VALUES ('3', '4');
INSERT INTO `library`.`book_author` (`book_id`, `author_id`) VALUES ('4', '5');
INSERT INTO `library`.`book_author` (`book_id`, `author_id`) VALUES ('5', '6');


